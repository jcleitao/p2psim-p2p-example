NODES                    100000
CYCLE                    2000  # 2000 msec

simulation.name			 bigenginewithinterval-cyclon-floodbcast-100000n
simulation.stdout		 nova.peernet.core.utils.PeernetSimulationLogger
engine.mode              simcustom
engine.simengine		 nova.peernet.core.BigEngineSim
simulation.heap		     nova.peernet.core.queues.ConcurrentBigHeapWithInterval
engine.duration          CYCLE * 10 + 1
random.seed              0
network.size             NODES

#################
#   PROTOCOLS   #
#################

include.protocol         cyclon,bcast

protocol.cyclon          nova.protocols.overlay.cyclon.Cyclon
{
  peer                   nova.protocols.overlay.utils.AgedPeer
  step					 CYCLE/2
  transport              trans
  viewsize				 30
  samplesize			 8
  jointtl				 5
}

protocol.bcast           nova.protocols.broadcast.FloodBroadcast
{
  peer					 peernet.core.Peer
  at					 0
  linkable               cyclon
  transport              trans 
}



##################
#   TRANSPORTS   #
##################

transport.trans          UniformRandomTransport
{
  mindelay               50
  maxdelay               50
}



####################
#   INITIALIZERS   #
####################
include.init			 overlay

init.overlay             nova.controls.overlay.OverlayJoinInitializer
{
  protocol               cyclon
  selector				 single
}



################
#   CONTROLS   #
################
include.control          bcastcontrol,connectivity,clustering,indegree,degree
order.control			 bcastcontrol,bcastactivator,connectivity,clustering,indegree,degree

control.bcastcontrol	 nova.controls.broadcast.BroadcastControlAndObserver
{
	protocol 			 bcast
	filename			 broadcast
	multifile			 false
	tagtime				 true
	separator			 ,
	activation			 .10
	step				 CYCLE
}

control.connectivity	 peernet.reports.ConnectivityObserver
{
	protocol		     cyclon
	n					 NODES
	filename			 connectivity
	multifile			 false
	tagtime				 true
	separator			 , 
	step				 CYCLE
}

control.clustering		 peernet.reports.Clustering
{
	protocol		     cyclon
	undir				 true
	n					 NODES
	filename			 clustering
	multifile			 false
	tagtime				 true
	separator			 , 
	step				 CYCLE
}

control.indegree		 nova.protocols.overlay.observers.InDegreeObserver
{
	protocol		     cyclon
	n					 NODES
	filename			 indegree
	multifile			 true
	tagtime				 false
	separator			 , 
	step				 CYCLE
}

control.degree			 nova.protocols.overlay.observers.DegreeObserver
{
	protocol		     cyclon
	n					 NODES
	filename			 outdegree
	multifile			 true
	tagtime				 false
	separator			 , 
	step				 CYCLE
}
